import "blueprint.node" for Node
import "blueprint.pin" for Pin
import "blueprint.node_param" for NodeParam
import "blueprint.variant" for Variant, VAR_TYPE_NUMBER
import "blueprint.blueprint" for Blueprint
import "archgraph.variant" for VAR_TYPE_SCOPE_SIZE, VarScopeSize

class ScopeSize is Node
{
	init()
	{
		super.init()

		this.imports = [
			Pin(this, "size", VAR_TYPE_NUMBER),
		]
		this.exports = [
			Pin(this, "size", VAR_TYPE_SCOPE_SIZE),
		]

		this.params.add(NodeParam("size", 0))
		this.params.add(NodeParam("mode", "absolute", { "combo" : [ "absolute", "relative", "floating" ] }))

		this.layout()
	}

	calc_value(idx)
	{
		var size = this.query_param("size").value
		var v_size = Blueprint.calc_input_value(this, 0)
		if (v_size) {
			size = v_size.value
		}

		var mode = this.query_param("mode").value

		return Variant(VAR_TYPE_SCOPE_SIZE, VarScopeSize(size, mode))
	}
}