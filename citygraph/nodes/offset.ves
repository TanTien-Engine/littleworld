import "blueprint.node" for Node
import "blueprint.pin" for Pin
import "blueprint.blueprint" for Blueprint
import "blueprint.variant" for Variant
import "blueprint.node_param" for NodeParam
import "citygraph.variant" for VAR_TYPE_BLOCK

class Offset is Node
{
	init()
	{
		super.init()
	
		this.imports = [
			Pin(this, "blocks", VAR_TYPE_BLOCK)
		]
		this.exports = [
			Pin(this, "blocks", VAR_TYPE_BLOCK)		
		]

		this.params.add(NodeParam("distance", 0, { "min" : -10, "max" : 10 }))

		this.layout()

		this.v_blocks = nil
	}

	on_node_dirty()
	{
		this.v_blocks = nil
	}

	calc_value(idx)
	{
		var v_src = Blueprint.calc_input_value(this, 0)
		if (!v_src) {
			return nil
		}

		var dist = this.query_param("distance").value

		if (!this.v_blocks) 
		{
			var blocks = []
			for (var v_block in v_src.value)
			{
				var block = v_block.value.offset_clone(dist)
				blocks.add(Variant(VAR_TYPE_BLOCK, block))
			}
			this.v_blocks = Variant(blocks)
		}

		return this.v_blocks
	}
}