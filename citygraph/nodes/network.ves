import "blueprint.node" for Node
import "blueprint.pin" for Pin
import "blueprint.blueprint" for Blueprint
import "blueprint.variant" for Variant
import "rendergraph.variant" for VAR_TYPE_TEXTURE
import "citygraph.variant" for VAR_TYPE_NETWORK
import "citygen" for Network as city_Network

class Network is Node
{
	init()
	{
		super.init()
	
		this.imports = [
			Pin(this, "tf", VAR_TYPE_TEXTURE)
		]
		this.exports = [
			Pin(this, "nw", VAR_TYPE_NETWORK),
		]

		this.layout()

		this.nw = nil
	}

	on_node_dirty()
	{
		this.nw = nil
	}

	calc_value(idx)
	{
		var v_tex = Blueprint.calc_input_value(this, 0)
		if (!v_tex or !v_tex.value) {
			return nil
		}

		if (!this.nw) 
		{
			this.nw = city_Network.init(v_tex.value.tex)
			this.nw.build_streamlines(2)
			this.nw.build_topology()
		}

		return Variant(VAR_TYPE_NETWORK, this.nw)
	}
}