import "blueprint.node" for Node
import "blueprint.pin" for Pin
import "blueprint.blueprint" for Blueprint
import "blueprint.variant" for Variant
import "geograph.variant" for VAR_TYPE_GEO
import "citygraph.variant" for VAR_TYPE_BLOCK
import "citygen" for Block

class Blocks is Node
{
	init()
	{
		super.init()
	
		this.imports = [
			Pin(this, "geos", VAR_TYPE_GEO)
		]
		this.exports = [
			Pin(this, "blocks", VAR_TYPE_BLOCK),
		]

		this.layout()

		this.v_blocks = nil
	}

	on_node_dirty()
	{
		this.v_blocks = nil
	}

	calc_value(idx)
	{
		var v_geos = Blueprint.calc_input_value(this, 0)
		if (!v_geos) {
			return nil
		}

		if (!this.v_blocks) 
		{
			var blocks = []
			for (var b in v_geos.value)
			{
				var block = Block.init(b.value.shape)
				blocks.add(Variant(VAR_TYPE_BLOCK, block))
			}
			this.v_blocks = Variant(blocks)
		}

		return this.v_blocks
	}
}