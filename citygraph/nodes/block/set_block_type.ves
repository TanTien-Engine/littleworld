import "blueprint.node" for Node
import "blueprint.pin" for Pin
import "blueprint.variant" for Variant, VAR_TYPE_ARRAY
import "blueprint.blueprint" for Blueprint
import "blueprint.node_param" for NodeParam
import "citygraph.variant" for VAR_TYPE_BLOCK, BLOCK_TYPE_COMMON, BLOCK_TYPE_PARK, VarBlock

class SetBlockType is Node
{
	init()
	{
		super.init()
	
		this.imports = [
			Pin(this, "blocks", VAR_TYPE_ARRAY),
		]
		this.exports = [
			Pin(this, "blocks", VAR_TYPE_ARRAY),
		]

		this.params.add(NodeParam("type", "common", { "combo" : [ "common", "park" ] }))

		this.layout()
	}

	calc_value(idx)
	{
		var v_blocks = Blueprint.calc_input_value(this, 0)
		if (!v_blocks) {
			return nil
		}

		return Variant(this.build_blocks(v_blocks.value))
	}

	build_blocks(blocks)
	{
		var ret = []

		var b_type = nil
		var type = this.query_param("type").value
		if (type == "common") {
			b_type = BLOCK_TYPE_COMMON
		} else if (type == "park") {
			b_type = BLOCK_TYPE_PARK		
		}

		for (var block in blocks)
		{
			var v_block = VarBlock(block.value.poly, b_type)
			ret.add(Variant(VAR_TYPE_BLOCK, v_block))
		}

		return ret
	}	
}