import "blueprint.node" for Node
import "blueprint.pin" for Pin
import "blueprint.blueprint" for Blueprint
import "blueprint.variant" for Variant, VAR_TYPE_ARRAY
import "blueprint.node_param" for NodeParam
import "citygraph.utility" for Utility

class AreaSelector is Node
{
	init()
	{
		super.init()
	
		this.imports = [
			Pin(this, "polys", VAR_TYPE_ARRAY),
		]
		this.exports = [
			Pin(this, "polys", VAR_TYPE_ARRAY),
		]

		this.params.add(NodeParam("num", 1, {  "integer" : true, "region" : 10 }))

		this.layout()

		this.v_polygons = nil
	}	

	on_node_dirty()
	{
		this.v_polygons = nil
	}

	calc_value(idx)
	{
		if (!this.v_polygons) 
		{
			var v_polys = Blueprint.calc_input_value(this, 0)
			var all_polys = Utility.list_flatten(v_polys)
			var sel_polys = this.select_polygons(all_polys)
			this.v_polygons = Variant(sel_polys)
		}

		return this.v_polygons
	}

	select_polygons(src_polys)
	{
		var num = this.query_param("num").value
		if (src_polys.count < num) {
			return src_polys
		}

		var poly_area = []
		for (var v_poly in src_polys) {
			var area = v_poly.value.shape.calc_area()
			poly_area.add([ v_poly, area ])
		}

		fun poly_area_cmp(v0, v1) {
			return v0[1] > v1[1]
		}
		poly_area.sort(poly_area_cmp)

		var polys = []
		for (var i in 0..num) {
			polys.add(poly_area[i][0])
		}
		return polys
	}
}