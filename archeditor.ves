import "editor.editor" for Editor
import "archgraph.nodes.mesh_file" for MeshFile
import "filesystem" for Filesystem
import "gui" for GUI

class Archeditor is Editor
{
	load()
	{
		super.load()

		this.prepare_nodes()
	}

	prepare_nodes()
	{
		this.clear_popup_nodes()

		import "editor.bpnodes" for BP_NODES		
		for (var node in BP_NODES) {
			super.add_popup_node(node)
		}
		
		import "archnodes" for ARCH_NODES
		for (var node in ARCH_NODES) {
			super.add_popup_node(node)
		}
	}

	draw_preview()
	{
		if (this.scene_stack.bp_dirty) {
			this.rebuild_all()
		}

		super.draw_preview()
	}

	rebuild_all()
	{
		var scene = this.scene_stack.root()
		for (var node in scene.nodes) {
			var bp_node = node.components["bp"]
			bp_node.on_node_dirty()
		}
	}

	add_node_from_file(filepath, x, y)
	{
		super.add_node_from_file(filepath, x, y)

		var node = nil

		if (filepath.contains(".obj"))
		{
			node = MeshFile()
			var relative = Filesystem.get_relative_path(filepath)
			node.filepath = relative
		}

		if (node) {
			var pos = GUI.trans_scr_pos_to_proj(x, y, -this.camera.pos.x, -this.camera.pos.y, 1.0/this.camera.scale)
			this.add_node(node, pos[0], pos[1])
		}		
	}	
}