var node0 = ::blueprint::nodes::input::Input()

node0.var_name = "facade"
node0.var_type = "geometry"

_editor.add_node(node0, 276.1985523392, -148.8761762244)

var node1 = ::archgraph::nodes::primitive_cube::PrimitiveCube()

_editor.add_node(node1, -294.55292489196, 126.89059174428)

var node2 = ::blueprint::nodes::number::Number()

node2.value = 1

_editor.add_node(node2, -198.54878403176, -136.53207926957)

var node3 = ::blueprint::nodes::subgraph::Subgraph()
node3.load_from_file(_editor, "../../../assets/archgraph/texture.ves")

_editor.add_node(node3, 252.6085397592, -19.7862595044)

var node4 = ::archgraph::nodes::setup_projection::SetupProjection()
node4.query_param("axes").value = "xy"
node4.query_param("scale").value.set(1, 1)
node4.query_param("offset").value.set(0, 0)
node4.query_param("uw_factor").value = 0.35

_editor.add_node(node4, 33.556419527691, 15.0034607456)

var node5 = ::blueprint::nodes::load::Load()

node5.var_name = "wall_depth"

_editor.add_node(node5, -143.58869212281, -1.0705211973496)

var node6 = ::archgraph::nodes::insert::Insert()

_editor.add_node(node6, 574.93056278428, -81.00162986208)

var node7 = ::archgraph::nodes::scale::Scale()
node7.query_param("s").value.set(1, 1, 0.35)

_editor.add_node(node7, -148.17041026801, 84.08246618521)

var node8 = ::archgraph::nodes::translate_scope::TranslateScope()
node8.query_param("t").value.set(0, 0, -0.17)

_editor.add_node(node8, 428.39479171003, -212.55082348756)

var node9 = ::blueprint::nodes::combine::Combine()

_editor.add_node(node9, -290.44276063259, 17.94406718243)

var node10 = ::blueprint::nodes::number::Number()

node10.value = 1

_editor.add_node(node10, -424.5182543591, 65.95992063488)

var node11 = ::blueprint::nodes::load::Load()

node11.var_name = "wall_depth"

_editor.add_node(node11, -424.638549373, 9.6170445427003)

var node12 = ::blueprint::nodes::combine::Combine()

_editor.add_node(node12, 275.33585133725, -266.46189533378)

var node13 = ::blueprint::nodes::load::Load()

node13.var_name = "wall_depth"

_editor.add_node(node13, -132.998381753, -237.5597258873)

var node14 = ::blueprint::nodes::divide::Divide()

_editor.add_node(node14, 3.2350127142005, -258.70867682792)

var node15 = ::blueprint::nodes::integer::Integer()

node15.value = 2

_editor.add_node(node15, -129.86498447818, -297.30767340995)

var node16 = ::blueprint::nodes::negate::Negate()

_editor.add_node(node16, 137.66602516537, -246.72968000174)

var node17 = ::blueprint::nodes::subgraph::Subgraph()
node17.load_from_file(_editor, "stone_block_tex_rand.ves")

_editor.add_node(node17, -5.1140124616996, -128.2318050349)

var node18 = ::blueprint::nodes::number::Number()

node18.value = 0.35

_editor.add_node(node18, -207.92791748047, 387.33099365234)

var node19 = ::blueprint::nodes::store::Store()

node19.var_name = "wall_depth"

_editor.add_node(node19, -72.517943079617, 388.24007346413)

var node20 = ::blueprint::nodes::output::Output()

node20.var_name = "geo"
node20.var_type = [ "geometry", "array" ]

_editor.add_node(node20, 714, -70.5)

Blueprint.connect(node18, "v", node19, "var")
Blueprint.connect(node19, "var", node13, "var")
Blueprint.connect(node19, "var", node11, "var")
Blueprint.connect(node19, "var", node5, "var")
Blueprint.connect(node13, "var", node14, "a")
Blueprint.connect(node15, "v", node14, "b")
Blueprint.connect(node14, "v", node16, "v")
Blueprint.connect(node16, "v", node12, "z")
Blueprint.connect(node10, "v", node9, "x")
Blueprint.connect(node10, "v", node9, "y")
Blueprint.connect(node11, "var", node9, "z")
Blueprint.connect(node2, "v", node17, "rand")
Blueprint.connect(node1, "geo", node7, "geo")
Blueprint.connect(node9, "xyz", node7, "s")
Blueprint.connect(node7, "geo", node4, "geo")
Blueprint.connect(node5, "var", node4, "uw_factor")
Blueprint.connect(node4, "geo", node3, "geo")
Blueprint.connect(node17, "tex", node3, "texture")
Blueprint.connect(node0, "var", node8, "geo")
Blueprint.connect(node12, "xyz", node8, "t")
Blueprint.connect(node3, "geo", node6, "geo")
Blueprint.connect(node8, "geo", node6, "pos")
Blueprint.connect(node6, "geo", node20, "var")
