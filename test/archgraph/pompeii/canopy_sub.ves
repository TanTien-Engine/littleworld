var node0 = ::blueprint::nodes::input::Input()

node0.var_name = "facade"
node0.var_type = "geometry"

_editor.add_node(node0, -136.4380676608, 201.6027437756)

var node1 = ::blueprint::nodes::output::Output()

node1.var_name = "geo"
node1.var_type = [ "geometry", "array" ]

_editor.add_node(node1, 579.99838, 144.89592)

var node2 = ::blueprint::nodes::subgraph::Subgraph()
node2.load_from_file(_editor, "canopy_beam_width.ves")

_editor.add_node(node2, -330, 147)

var node3 = ::archgraph::nodes::split::Split()
node3.query_param("axis").value = "hori"
node3.query_param("repeat").value = false

_editor.add_node(node3, 38, 93)

var node4 = ::archgraph::nodes::split_size::SplitSize()
node4.query_param("size").value = 10
node4.query_param("mode").value = "floating"
node4.query_param("scale").value = 1

_editor.add_node(node4, -135, 5)

var node5 = ::blueprint::nodes::subgraph::Subgraph()
node5.load_from_file(_editor, "canopy_beam.ves")

_editor.add_node(node5, 255, 181)

var node6 = ::blueprint::nodes::subgraph::Subgraph()
node6.load_from_file(_editor, "canopy_type.ves")

_editor.add_node(node6, 251, 87)

var node7 = ::blueprint::nodes::subgraph::Subgraph()
node7.load_from_file(_editor, "canopy_beam.ves")

_editor.add_node(node7, 253, -2)

var node8 = ::blueprint::nodes::merge::Merge()

_editor.add_node(node8, 441.22700805664, 114.17993774414)

var node9 = ::archgraph::nodes::split_size::SplitSize()
node9.query_param("size").value = 0
node9.query_param("mode").value = "absolute"
node9.query_param("scale").value = 1

_editor.add_node(node9, -133.9552154541, 113.82412719727)

Blueprint.connect(node2, "door_w", node9, "size")
Blueprint.connect(node0, "var", node3, "parent")
Blueprint.connect(node9, "size", node3, "size0")
Blueprint.connect(node4, "size", node3, "size1")
Blueprint.connect(node9, "size", node3, "size2")
Blueprint.connect(node3, "child2", node7, "facade")
Blueprint.connect(node3, "child1", node6, "facade")
Blueprint.connect(node3, "child0", node5, "facade")
Blueprint.connect(node5, "geo", node8, "in0")
Blueprint.connect(node6, "geo", node8, "in1")
Blueprint.connect(node7, "geo", node8, "in2")
Blueprint.connect(node8, "list", node1, "var")
