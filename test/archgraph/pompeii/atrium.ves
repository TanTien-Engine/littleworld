var node0 = ::blueprint::nodes::subgraph::Subgraph()
node0.load_from_file(_editor, "../../../assets/archgraph/draw.ves")

_editor.add_node(node0, 655.90825354692, 222.78951929814)

var node1 = ::blueprint::nodes::camera3d::Camera3d()

node1.cam.position.set(22.164238978614, 10.282960442072, 15.676044625001)
node1.cam.yaw = -497.8
node1.cam.pitch = -33.1
node1.cam.zoom = 45
node1.cam.update_vectors()
node1.speed = 0.29292559623718

_editor.add_node(node1, 458.99042032002, 105.19737898286)

var node2 = ::archgraph::nodes::offset::Offset()
node2.query_param("distance").value = 1

_editor.add_node(node2, -546.54627980223, 318.09253345642)

var node3 = ::archgraph::nodes::primitive_quad::PrimitiveQuad()
node3.query_param("size").value.set(18, 12)

_editor.add_node(node3, -699.28330318173, 360.36255086984)

var node4 = ::archgraph::nodes::extrude::Extrude()
node4.query_param("distance").value = 2.5

_editor.add_node(node4, -395.13646977722, 345.1681112526)

var node5 = ::archgraph::nodes::extrude_roof::ExtrudeRoof()
node5.query_param("distance").value = 0.73508852720261
node5.query_param("type").value = "shed"
node5.query_param("idx").value = 0

_editor.add_node(node5, -53.311901397618, 229.12883121452)

var node6 = ::blueprint::nodes::merge::Merge()

_editor.add_node(node6, 298.10573790672, 324.19970981916)

var node7 = ::archgraph::nodes::comp::Comp()
node7.query_param("selector").value = "side"

node7.on_param_dirty()

_editor.add_node(node7, -241.54850319602, 447.06078968395)

var node8 = ::blueprint::nodes::subgraph::Subgraph()
node8.load_from_file(_editor, "../../../sample/archgraph/pompeii/column_facade.ves")

_editor.add_node(node8, 65.429349771193, 350.8189543064)

var node9 = ::blueprint::nodes::for_each_f::ForEachF()

_editor.add_node(node9, 78.272218562362, 448.37015601555)

var node10 = ::archgraph::nodes::comp::Comp()
node10.query_param("selector").value = "face6"

node10.on_param_dirty()

_editor.add_node(node10, -243.93489059878, 289.876356821)

var node11 = ::blueprint::nodes::number::Number()

node11.value = 2.5

_editor.add_node(node11, -1028.9813232422, 480.751953125)

var node12 = ::blueprint::nodes::store::Store()

node12.var_name = "height"

_editor.add_node(node12, -895.98132324219, 480.751953125)

var node13 = ::blueprint::nodes::load::Load()

node13.var_name = "height"

_editor.add_node(node13, -549.74132324218, 237.441953125)

var node14 = ::blueprint::nodes::subgraph::Subgraph()
node14.load_from_file(_editor, "../../../sample/archgraph/pompeii/garden.ves")
node14.set_prop_value("d", 0.38407850265503)

_editor.add_node(node14, -136.82764333678, 116.69019484843)

var node15 = ::blueprint::nodes::number::Number()

node15.value = 1

_editor.add_node(node15, -834.67924804688, 279.18953857422)

var node16 = ::blueprint::nodes::negate::Negate()

_editor.add_node(node16, -694.97923583984, 285.78957519531)

var node17 = ::archgraph::nodes::flip_scope_normal::FlipScopeNormal()

_editor.add_node(node17, -81.616038147686, 470.7283384934)

var node18 = ::blueprint::nodes::subgraph::Subgraph()
node18.load_from_file(_editor, "../../../sample/archgraph/pompeii/ground.ves")

_editor.add_node(node18, -456.75933416193, 518.71956764915)

Blueprint.connect(node15, "v", node16, "v")
Blueprint.connect(node11, "v", node12, "var")
Blueprint.connect(node12, "var", node13, "var")
Blueprint.connect(node9, "curr_item", node8, "facade")
Blueprint.connect(node3, "geo", node2, "geo")
Blueprint.connect(node16, "v", node2, "dist")
Blueprint.connect(node2, "border", node18, "facade")
Blueprint.connect(node2, "inside", node14, "facade")
Blueprint.connect(node2, "border", node4, "geo")
Blueprint.connect(node13, "var", node4, "dist")
Blueprint.connect(node4, "geo", node10, "geo")
Blueprint.connect(node10, "top", node5, "geo")
Blueprint.connect(node4, "geo", node7, "geo")
Blueprint.connect(node7, "inside", node17, "geo")
Blueprint.connect(node17, "geo", node9, "items")
Blueprint.connect(node8, "geo", node9, "eval")
Blueprint.connect(node9, "result", node6, "in0")
Blueprint.connect(node5, "geo", node6, "in1")
Blueprint.connect(node14, "geo", node6, "in2")
Blueprint.connect(node7, "border", node6, "in3")
Blueprint.connect(node18, "geo", node6, "in4")
Blueprint.connect(node6, "list", node0, "geos")
Blueprint.connect(node1, "this", node0, "view_cam")
