var node0 = ::blueprint::nodes::subgraph::Subgraph()
node0.load_from_file(_editor, "../../../assets/archgraph/draw.ves")

_editor.add_node(node0, 357.65031270712, 27.490603736799)

var node1 = ::blueprint::nodes::camera3d::Camera3d()

node1.cam.position.set(4.3364913906459, 1.0420261498964, -6.5761689042182)
node1.cam.yaw = -621
node1.cam.pitch = -14.4
node1.cam.zoom = 45
node1.cam.update_vectors()
node1.speed = 0.22097560763359

_editor.add_node(node1, 162.85810273, -130.98580664883)

var node2 = ::archgraph::nodes::comp::Comp()
node2.query_param("selector").value = "side"

node2.on_param_dirty()

_editor.add_node(node2, -588.35122705842, 16.64002022284)

var node3 = ::archgraph::nodes::primitive_polygon::PrimitivePolygon()
node3.query_param("vertices").value = [ 0, 0, 1, 0, 1.5, 1, 1, 1.5, 0, 1 ]

_editor.add_node(node3, -893.7493020985, 87.87626446753)

var node4 = ::archgraph::nodes::extrude::Extrude()
node4.query_param("distance").value = 1

_editor.add_node(node4, -751.23086951796, 78.64081792681)

var node5 = ::blueprint::nodes::merge::Merge()

_editor.add_node(node5, 167.11299554959, 48.005212482889)

var node6 = ::blueprint::nodes::integer::Integer()

node6.value = 0

_editor.add_node(node6, -698.95563964844, -86.13761962891)

var node7 = ::archgraph::nodes::comp::Comp()
node7.query_param("selector").value = "face6"

node7.on_param_dirty()

_editor.add_node(node7, -583.59151944247, 139.89687832919)

var node8 = ::blueprint::nodes::number::Number()

node8.value = 0.08538818359375

_editor.add_node(node8, -516.68493833033, -88.65346979849)

var node9 = ::blueprint::nodes::integer::Integer()

node9.value = 0

_editor.add_node(node9, -513.65468753133, -153.88197282805)

var node10 = ::blueprint::nodes::subgraph::Subgraph()
node10.load_from_file(_editor, "window.ves")

_editor.add_node(node10, -299.53900317383, 106.9981640625)

var node11 = ::archgraph::nodes::primitive_cube::PrimitiveCube()
node11.query_param("size").value.set(10, 2.5, 5)

_editor.add_node(node11, -886.54938899911, -308.89303808484)

var node12 = ::archgraph::nodes::comp::Comp()
node12.query_param("selector").value = "face6"

node12.on_param_dirty()

_editor.add_node(node12, -509.01149395548, -279.20239173809)

var node13 = ::blueprint::nodes::subgraph::Subgraph()
node13.load_from_file(_editor, "door.ves")

_editor.add_node(node13, -114.13855712891, -380.40937060547)

var node14 = ::blueprint::nodes::subgraph::Subgraph()
node14.load_from_file(_editor, "gallery.ves")

_editor.add_node(node14, -294.00482177734, -119.27758789062)

var node15 = ::archgraph::nodes::split::Split()
node15.query_param("axis").value = "hori"
node15.query_param("repeat").value = false

_editor.add_node(node15, -307.052421875, -446.80734985352)

var node16 = ::archgraph::nodes::split_size::SplitSize()
node16.query_param("size").value = 1
node16.query_param("mode").value = "absolute"

_editor.add_node(node16, -444.59069824219, -459.18496704102)

var node17 = ::blueprint::nodes::subgraph::Subgraph()
node17.load_from_file(_editor, "columns.ves")

_editor.add_node(node17, -549.64667729492, -795.74546811524)

var node18 = ::archgraph::nodes::comp::Comp()
node18.query_param("selector").value = "side"

node18.on_param_dirty()

_editor.add_node(node18, -769.84731171875, -653.78610124512)

var node19 = ::blueprint::nodes::for_each_f::ForEachF()

_editor.add_node(node19, -537.65577890625, -692.72337744141)

Blueprint.connect(node19, "curr_item", node17, "facade")
Blueprint.connect(node11, "geo", node18, "geo")
Blueprint.connect(node18, "side", node19, "items")
Blueprint.connect(node17, "geo", node19, "eval")
Blueprint.connect(node11, "geo", node12, "geo")
Blueprint.connect(node12, "front", node15, "parent")
Blueprint.connect(node16, "size", node15, "size0")
Blueprint.connect(node15, "child0", node13, "facade")
Blueprint.connect(node12, "front", node14, "facade")
Blueprint.connect(node14, "geo", node5, "in1")
Blueprint.connect(node3, "geo", node4, "geo")
Blueprint.connect(node4, "geo", node7, "geo")
Blueprint.connect(node7, "front", node10, "facade")
Blueprint.connect(node8, "v", node10, "win_frame_width")
Blueprint.connect(node9, "v", node10, "win_type")
Blueprint.connect(node4, "geo", node2, "geo")
Blueprint.connect(node5, "list", node0, "geos")
Blueprint.connect(node1, "this", node0, "view_cam")
