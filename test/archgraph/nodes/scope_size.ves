var node0 = ::archgraph::nodes::primitive_cube::PrimitiveCube()
node0.query_param("size").value.set(4, 1, 2)

_editor.add_node(node0, -679.86437730373, 534.15239492098)

var node1 = ::blueprint::nodes::subgraph::Subgraph()
node1.load_from_file(_editor, "../../../assets/archgraph/texture.ves")

_editor.add_node(node1, 606.67740476334, 373.67121549267)

var node2 = ::blueprint::nodes::subgraph::Subgraph()
node2.load_from_file(_editor, "../../../assets/archgraph/draw.ves")

_editor.add_node(node2, 1000.6715238874, 445.39882485205)

var node3 = ::blueprint::nodes::camera3d::Camera3d()

node3.cam.position.set(3.5304998689084, 5.7043749526334, -3.7328421138294)
node3.cam.yaw = -233.5
node3.cam.pitch = -47.4
node3.cam.zoom = 37
node3.cam.update_vectors()
node3.speed = 0.22097560763359

_editor.add_node(node3, 810.19562075088, 305.4334061351)

var node4 = ::archgraph::nodes::comp::Comp()
node4.query_param("selector").value = "side"

node4.on_param_dirty()

_editor.add_node(node4, -437.60382310952, 441.55291328024)

var node5 = ::archgraph::nodes::mesh_file::MeshFile()
node5.init_filepath("../../../../procedural/city/examples/Example_Pompeii__2019_1/assets/general/primitives/cylinder.vert.8.notop.tex.obj")

_editor.add_node(node5, 256.62021476334, 417.38850549267)

var node6 = ::archgraph::nodes::insert::Insert()

_editor.add_node(node6, 385.52486369356, 392.09940998486)

var node7 = ::rendergraph::nodes::texture::Texture()
node7.query_param("unif_name").value = "u_tex"
node7.gamma_correction = false
node7.mipmap = false
node7.init_texture("../../../../procedural/city/examples/Example_Pompeii__2019_1/assets/general/grill/grillTexture_1.jpg")

_editor.add_node(node7, 369.59754611673, 229.12143407336)

var node8 = ::archgraph::nodes::split_size::SplitSize()
node8.query_param("size").value = 0.3
node8.query_param("mode").value = "absolute"

_editor.add_node(node8, -433.81519432367, 359.46051581079)

var node9 = ::archgraph::nodes::split::Split()
node9.query_param("axis").value = "hori"
node9.query_param("repeat").value = true

_editor.add_node(node9, -286.96367510314, 311.34316800523)

var node10 = ::blueprint::nodes::merge::Merge()

_editor.add_node(node10, 806.66920672989, 458.07043359814)

var node11 = ::archgraph::nodes::split_size::SplitSize()
node11.query_param("size").value = 0.5
node11.query_param("mode").value = "floating"

_editor.add_node(node11, -435.51410535442, 270.00298041158)

var node12 = ::archgraph::nodes::scale_scope::ScaleScope()
node12.query_param("s").value.set(1, 1, 1)

_editor.add_node(node12, 99.103796990425, 261.9817863784)

var node13 = ::archgraph::nodes::comp::Comp()
node13.query_param("selector").value = "face6"

node13.on_param_dirty()

_editor.add_node(node13, -441.28920810952, 568.17392428024)

var node14 = ::archgraph::nodes::scope_size::ScopeSize()

_editor.add_node(node14, -294.46047119141, 103.49376464844)

var node15 = ::blueprint::nodes::combine::Combine()

_editor.add_node(node15, -65.03496451936, 138.98903155779)

var node16 = ::blueprint::nodes::number::Number()

node16.value = 1

_editor.add_node(node16, -296.43992031381, 184.81923721004)

var node17 = ::blueprint::nodes::for_each_f::ForEachF()

_editor.add_node(node17, 252.8779386167, 349.04247707536)

Blueprint.connect(node17, "curr_item", node14, "geo")
Blueprint.connect(node16, "v", node15, "x")
Blueprint.connect(node16, "v", node15, "y")
Blueprint.connect(node14, "sx", node15, "z")
Blueprint.connect(node17, "curr_item", node12, "geo")
Blueprint.connect(node15, "xyz", node12, "s")
Blueprint.connect(node0, "geo", node13, "geo")
Blueprint.connect(node13, "front", node9, "parent")
Blueprint.connect(node8, "size", node9, "size0")
Blueprint.connect(node11, "size", node9, "size1")
Blueprint.connect(node9, "child0", node17, "items")
Blueprint.connect(node12, "geo", node17, "eval")
Blueprint.connect(node5, "geo", node6, "geo")
Blueprint.connect(node17, "result", node6, "pos")
Blueprint.connect(node6, "geo", node1, "geo")
Blueprint.connect(node7, "tex", node1, "texture")
Blueprint.connect(node0, "geo", node4, "geo")
Blueprint.connect(node4, "side", node10, "in0")
Blueprint.connect(node1, "geo", node10, "in1")
Blueprint.connect(node10, "list", node2, "geos")
Blueprint.connect(node3, "this", node2, "view_cam")
