var node0 = ::blueprint::nodes::subgraph::Subgraph()
node0.load_from_file(_editor, "../../../assets/archgraph/draw.ves")

_editor.add_node(node0, 349.89284846417, -39.320489496217)

var node1 = ::blueprint::nodes::camera3d::Camera3d()

node1.cam.position.set(0.32841565853973, 1.5108261624961, 1.5436194559482)
node1.cam.yaw = -89.6
node1.cam.pitch = -56.4
node1.cam.zoom = 45
node1.cam.update_vectors()
node1.speed = 0.22097560763359

_editor.add_node(node1, 150.21951285987, -192.00132911369)

var node2 = ::archgraph::nodes::split_size::SplitSize()
node2.query_param("size").value = 0.10690917819738
node2.query_param("mode").value = "floating"

_editor.add_node(node2, -330.37990396201, -38.645111345138)

var node3 = ::archgraph::nodes::split_size::SplitSize()
node3.query_param("size").value = 0.16074015200138
node3.query_param("mode").value = "floating"

_editor.add_node(node3, -325.68551325835, -125.52209877714)

var node4 = ::blueprint::nodes::merge::Merge()

_editor.add_node(node4, 150.7087064731, -22.910723975843)

var node5 = ::blueprint::nodes::function::Function()

node5.set_size(518.20307238016, 192.91798878513)
node5.title = "red"

_editor.add_node(node5, -181.34547835058, 503.46912518386)

var node6 = ::blueprint::nodes::func_in::FuncIn()

node6.var_name = "geo"
node6.var_type = "geometry"

_editor.add_node(node6, -364.57392277834, 451.04067262848)

var node7 = ::blueprint::nodes::subgraph::Subgraph()
node7.load_from_file(_editor, "../../../assets/archgraph/color.ves")

_editor.add_node(node7, -174.54494029897, 422.50789681414)

var node8 = ::blueprint::nodes::number3::Number3()

node8.value.set(1, 0, 0)

_editor.add_node(node8, -360.99473932911, 363.02781598139)

var node9 = ::blueprint::nodes::func_out::FuncOut()

node9.var_name = "geo"
node9.var_type = "geometry"

_editor.add_node(node9, 9.7794835231102, 443.7466589566)

var node10 = ::blueprint::nodes::function::Function()

node10.set_size(539.46180438016, 191.14642778513)
node10.title = "green"

_editor.add_node(node10, -188.63792835058, 269.48097518384)

var node11 = ::blueprint::nodes::func_in::FuncIn()

node11.var_name = "geo"
node11.var_type = "geometry"

_editor.add_node(node11, -375.28637277834, 213.40303262848)

var node12 = ::blueprint::nodes::subgraph::Subgraph()
node12.load_from_file(_editor, "../../../assets/archgraph/color.ves")

_editor.add_node(node12, -181.36439029897, 194.68425681414)

var node13 = ::blueprint::nodes::number3::Number3()

node13.value.set(0, 1, 0)

_editor.add_node(node13, -368.28718932911, 127.02017598139)

var node14 = ::blueprint::nodes::func_out::FuncOut()

node14.var_name = "geo"
node14.var_type = "geometry"

_editor.add_node(node14, 2.4870335231103, 207.7390189566)

var node15 = ::archgraph::nodes::split::Split()
node15.query_param("axis").value = "hori"
node15.query_param("repeat").value = true

_editor.add_node(node15, -181.33042293689, -71.641252039126)

var node16 = ::blueprint::nodes::func_call::FuncCall()
node16.imports.add(::blueprint::pin::Pin(node16, "geo", "geometry"))
node16.exports.add(::blueprint::pin::Pin(node16, "geo", "geometry"))
node16.layout()

_editor.add_node(node16, -29.261077623812, 12.470905674841)

var node17 = ::blueprint::nodes::func_call::FuncCall()
node17.imports.add(::blueprint::pin::Pin(node17, "geo", "geometry"))
node17.exports.add(::blueprint::pin::Pin(node17, "geo", "geometry"))
node17.layout()

_editor.add_node(node17, -29.06682901855, -53.826000027081)

Blueprint.connect(node11, "var", node12, "geo")
Blueprint.connect(node13, "v3", node12, "color")
Blueprint.connect(node12, "geo", node14, "var")
Blueprint.connect(node6, "var", node7, "geo")
Blueprint.connect(node8, "v3", node7, "color")
Blueprint.connect(node7, "geo", node9, "var")
Blueprint.connect(node2, "size", node15, "size0")
Blueprint.connect(node3, "size", node15, "size1")
Blueprint.connect(node10, "func", node17, "func")
Blueprint.connect(node15, "child1", node17, "geo")
Blueprint.connect(node5, "func", node16, "func")
Blueprint.connect(node15, "child0", node16, "geo")
Blueprint.connect(node16, "geo", node4, "in0")
Blueprint.connect(node17, "geo", node4, "in1")
Blueprint.connect(node4, "list", node0, "geos")
Blueprint.connect(node1, "this", node0, "view_cam")
