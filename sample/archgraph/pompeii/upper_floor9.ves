var node0 = ::blueprint::nodes::input::Input()

node0.var_name = "facade"
node0.var_type = "geometry"

_editor.add_node(node0, -325.3340094895, 22.74093258401)

var node1 = ::blueprint::nodes::output::Output()

node1.var_name = "geo"
node1.var_type = [ "geometry", "array" ]

_editor.add_node(node1, 402.15025207514, -21.95250504508)

var node2 = ::archgraph::nodes::split::Split()
node2.query_param("axis").value = "hori"
node2.query_param("repeat").value = false

_editor.add_node(node2, -147.09090909091, -81.227272727273)

var node3 = ::blueprint::nodes::subgraph::Subgraph()
node3.load_from_file(_editor, "wall_props.ves")

_editor.add_node(node3, -1280.3749060857, -19.826070623591)

var node4 = ::blueprint::nodes::multiply::Multiply()

_editor.add_node(node4, -1091.3749060857, -57.826070623591)

var node5 = ::blueprint::nodes::integer::Integer()

node5.value = 2

_editor.add_node(node5, -1225.3749060857, -107.82607062359)

var node6 = ::archgraph::nodes::split_size::SplitSize()
node6.query_param("size").value = 0
node6.query_param("mode").value = "absolute"

_editor.add_node(node6, -346, -61.5)

var node7 = ::archgraph::nodes::split_size::SplitSize()
node7.query_param("size").value = 0
node7.query_param("mode").value = "floating"

_editor.add_node(node7, -343.73172727273, -156.24309090909)

var node8 = ::blueprint::nodes::subgraph::Subgraph()
node8.load_from_file(_editor, "painted_wall.ves")
node8.set_prop_value("ground", false)

_editor.add_node(node8, 62.268243963068, 32.07509543679)

var node9 = ::blueprint::nodes::subgraph::Subgraph()
node9.load_from_file(_editor, "painted_wall.ves")
node9.set_prop_value("ground", false)

_editor.add_node(node9, 64.706185360514, -137.99417578785)

var node10 = ::blueprint::nodes::subgraph::Subgraph()
node10.load_from_file(_editor, "tile_gallery.ves")

_editor.add_node(node10, 64.405663769018, -53.985912824555)

var node11 = ::blueprint::nodes::merge::Merge()

_editor.add_node(node11, 258.24491161802, -53.234597037736)

var node12 = ::blueprint::nodes::branch_f::BranchF()

_editor.add_node(node12, -926.87301002921, 1.1371067428301)

var node13 = ::blueprint::nodes::subgraph::Subgraph()
node13.load_from_file(_editor, "../../../assets/archgraph/probability.ves")
node13.set_prop_value("p", 0.5)

_editor.add_node(node13, -1278.4883432252, 78.522536692633)

var node14 = ::blueprint::nodes::store::Store()

node14.var_name = "border_w"

_editor.add_node(node14, -787.48325577757, 13.979908749002)

var node15 = ::blueprint::nodes::load::Load()

node15.var_name = "border_w"

_editor.add_node(node15, -484.17388234981, -42.276697796046)

Blueprint.connect(node3, "depth", node4, "a")
Blueprint.connect(node5, "v", node4, "b")
Blueprint.connect(node13, "b", node12, "cond")
Blueprint.connect(node3, "depth", node12, "true")
Blueprint.connect(node4, "v", node12, "false")
Blueprint.connect(node12, "result", node14, "var")
Blueprint.connect(node14, "var", node15, "var")
Blueprint.connect(node15, "var", node6, "size")
Blueprint.connect(node0, "var", node2, "parent")
Blueprint.connect(node6, "size", node2, "size0")
Blueprint.connect(node7, "size", node2, "size1")
Blueprint.connect(node6, "size", node2, "size2")
Blueprint.connect(node2, "child1", node10, "facade")
Blueprint.connect(node2, "child2", node9, "geo")
Blueprint.connect(node2, "child0", node8, "geo")
Blueprint.connect(node8, "geo", node11, "in0")
Blueprint.connect(node10, "geo", node11, "in1")
Blueprint.connect(node9, "geo", node11, "in2")
Blueprint.connect(node11, "list", node1, "var")
