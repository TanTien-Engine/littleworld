var node0 = ::blueprint::nodes::input::Input()

node0.var_name = "facade"
node0.var_type = "geometry"

_editor.add_node(node0, -893.75202597214, 99.114223369024)

var node1 = ::blueprint::nodes::output::Output()

node1.var_name = "geo"
node1.var_type = [ "geometry", "array" ]

_editor.add_node(node1, 223.94383454545, 181.01410181818)

var node2 = ::archgraph::nodes::insert::Insert()

_editor.add_node(node2, 37.818651982658, 173.85898821934)

var node3 = ::archgraph::nodes::mesh_file::MeshFile()
node3.init_filepath("../../../../procedural/city/examples/Example_Pompeii__2019_1/assets/general/stonework/stone-vertical.01.obj")

_editor.add_node(node3, -650.66483360317, 557.29272532094)

var node4 = ::archgraph::nodes::split::Split()
node4.query_param("axis").value = "vert"
node4.query_param("repeat").value = true

_editor.add_node(node4, -749.54428586624, 31.855723565438)

var node5 = ::archgraph::nodes::split_size::SplitSize()
node5.query_param("size").value = 0.2
node5.query_param("mode").value = "relative"

_editor.add_node(node5, -892.18108050811, 13.873960612685)

var node6 = ::archgraph::nodes::setup_projection::SetupProjection()
node6.query_param("axes").value = "xy"
node6.query_param("scale").value.set(1, 1)
node6.query_param("scale2").value.set(0, 0)
node6.query_param("offset").value.set(0, 0)
node6.query_param("uw_factor").value = 1
node6.query_param("gpu").value = true

_editor.add_node(node6, -504.75085449219, 449.3678894043)

var node7 = ::blueprint::nodes::subgraph::Subgraph()
node7.load_from_file(_editor, "../../../assets/archgraph/texture.ves")

_editor.add_node(node7, -272.59204101562, 433.72897338867)

var node8 = ::blueprint::nodes::subgraph::Subgraph()
node8.load_from_file(_editor, "stone_block_tex.ves")

_editor.add_node(node8, -552.59201049805, 277.72897338867)

var node9 = ::archgraph::nodes::scale_scope::ScaleScope()
node9.query_param("s").value.set(1, 1, 0.35)
node9.query_param("anchor").value = "left"

_editor.add_node(node9, -577.32129760742, -37.491982421877)

var node10 = ::blueprint::nodes::subgraph::Subgraph()
node10.load_from_file(_editor, "wall_props.ves")

_editor.add_node(node10, -784.7369950728, -90.580612460049)

var node11 = ::blueprint::nodes::subgraph::Subgraph()
node11.load_from_file(_editor, "../../../assets/archgraph/align_front.ves")

_editor.add_node(node11, -378.5517680333, 33.012866599354)

var node12 = ::archgraph::nodes::translate_scope::TranslateScope()
node12.query_param("t").value.set(0.0037590267832883, 0, 0.0023392504021324)

_editor.add_node(node12, -177.00446777344, -42.212268066408)

var node13 = ::archgraph::nodes::rand_number::RandNumber()
node13.query_param("min").value = -0.01
node13.query_param("max").value = 0.01

_editor.add_node(node13, -450.96558817713, -82.888295020744)

var node14 = ::blueprint::nodes::lazy_eval::LazyEval()

_editor.add_node(node14, -317.6950732827, -32.946947609369)

var node15 = ::blueprint::nodes::lazy_eval::LazyEval()

_editor.add_node(node15, -316.25569072687, -78.024879444626)

Blueprint.connect(node13, "val", node15, "val")
Blueprint.connect(node13, "val", node14, "val")
Blueprint.connect(node3, "geo", node6, "geo")
Blueprint.connect(node6, "geo", node7, "geo")
Blueprint.connect(node8, "tex", node7, "texture")
Blueprint.connect(node0, "var", node4, "parent")
Blueprint.connect(node5, "size", node4, "size0")
Blueprint.connect(node4, "child0", node9, "geo")
Blueprint.connect(node10, "depth", node9, "z")
Blueprint.connect(node9, "geo", node11, "pos")
Blueprint.connect(node11, "pos", node12, "geo")
Blueprint.connect(node14, "pin", node12, "x")
Blueprint.connect(node15, "pin", node12, "z")
Blueprint.connect(node7, "geo", node2, "geo")
Blueprint.connect(node12, "geo", node2, "pos")
Blueprint.connect(node2, "geo", node1, "var")
