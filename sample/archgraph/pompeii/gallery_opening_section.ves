var node0 = ::blueprint::nodes::input::Input()

node0.var_name = "facade"
node0.var_type = "geometry"

_editor.add_node(node0, -515.77691063601, 144.57795038717)

var node1 = ::blueprint::nodes::output::Output()

node1.var_name = "geo"
node1.var_type = [ "geometry", "array" ]

_editor.add_node(node1, 342.21656181818, 5.105010909091)

var node2 = ::archgraph::nodes::split::Split()
node2.query_param("axis").value = "vert"
node2.query_param("repeat").value = false

_editor.add_node(node2, -217.15596844662, -70.167034606955)

var node3 = ::archgraph::nodes::split_size::SplitSize()
node3.query_param("size").value = 0
node3.query_param("mode").value = "absolute"

_editor.add_node(node3, -521.40021229279, -0.69363823325246)

var node4 = ::blueprint::nodes::subgraph::Subgraph()
node4.load_from_file(_editor, "gallery_props.ves")

_editor.add_node(node4, -720.62578625254, 15.498108968714)

var node5 = ::archgraph::nodes::split_size::SplitSize()
node5.query_param("size").value = 0.05
node5.query_param("mode").value = "absolute"

_editor.add_node(node5, -370.44072455288, -102.02156597043)

var node6 = ::archgraph::nodes::split_size::SplitSize()
node6.query_param("size").value = 1
node6.query_param("mode").value = "floating"

_editor.add_node(node6, -375.49181395935, -198.11457874278)

var node7 = ::blueprint::nodes::subgraph::Subgraph()
node7.load_from_file(_editor, "banister.ves")

_editor.add_node(node7, -12.603456996483, 1.1858409198168)

var node8 = ::blueprint::nodes::merge::Merge()

_editor.add_node(node8, 192.00611308705, -19.616761918502)

var node9 = ::blueprint::nodes::subgraph::Subgraph()
node9.load_from_file(_editor, "gallery_shelves.ves")

_editor.add_node(node9, -12.545454545455, -87.454545454545)

var node10 = ::archgraph::nodes::split_size::SplitSize()
node10.query_param("size").value = 0.89971381425858
node10.query_param("mode").value = "floating"

_editor.add_node(node10, -520.97427144176, -88.926894158394)

Blueprint.connect(node4, "banister_height", node3, "size")
Blueprint.connect(node0, "var", node2, "parent")
Blueprint.connect(node3, "size", node2, "size0")
Blueprint.connect(node5, "size", node2, "size1")
Blueprint.connect(node6, "size", node2, "size2")
Blueprint.connect(node2, "child1", node9, "facade")
Blueprint.connect(node2, "child0", node7, "facade")
Blueprint.connect(node7, "geo", node8, "in0")
Blueprint.connect(node9, "geo", node8, "in1")
Blueprint.connect(node8, "list", node1, "var")
