var node0 = ::blueprint::nodes::input::Input()

node0.var_name = "facade"
node0.var_type = "geometry"

_editor.add_node(node0, 430.96689101689, -60.488991761591)

var node1 = ::blueprint::nodes::output::Output()

node1.var_name = "geo"
node1.var_type = [ "geometry", "array" ]

_editor.add_node(node1, 702.24372936138, -5.185707621069)

var node2 = ::archgraph::nodes::mesh_file::MeshFile()
node2.init_filepath("../../../../procedural/city/examples/Example_Pompeii__2019_1/assets/streets/stoneA.obj")

_editor.add_node(node2, -130.09090909091, 83.462809917355)

var node3 = ::archgraph::nodes::mesh_file::MeshFile()
node3.init_filepath("../../../../procedural/city/examples/Example_Pompeii__2019_1/assets/streets/stoneB.obj")

_editor.add_node(node3, -128.09090909091, 36.462809917355)

var node4 = ::archgraph::nodes::mesh_file::MeshFile()
node4.init_filepath("../../../../procedural/city/examples/Example_Pompeii__2019_1/assets/streets/stoneC.obj")

_editor.add_node(node4, -128.09090909091, -9.5371900826446)

var node5 = ::archgraph::nodes::insert::Insert()

_editor.add_node(node5, 570.89060856499, -16.090533433509)

var node6 = ::blueprint::nodes::subgraph::Subgraph()
node6.load_from_file(_editor, "../../../assets/archgraph/texture.ves")

_editor.add_node(node6, 244.70166015625, -6.1622009277345)

var node7 = ::rendergraph::nodes::texture::Texture()
node7.query_param("unif_name").value = "u_tex"
node7.gamma_correction = false
node7.mipmap = false
node7.init_texture("../../../../procedural/city/examples/Example_Pompeii__2019_1/assets/streets/streets.color.jpg")
node7.set_sampler("null")

_editor.add_node(node7, -3.3892489346591, -104.16220092773)

var node8 = ::archgraph::nodes::rand_select::RandSelect()

_editor.add_node(node8, 26.557683260631, 34.1843615711)

var node9 = ::blueprint::nodes::lazy_eval::LazyEval()

_editor.add_node(node9, 426.50292434692, 5.9574401855467)

Blueprint.connect(node2, "geo", node8, "in0")
Blueprint.connect(node3, "geo", node8, "in1")
Blueprint.connect(node4, "geo", node8, "in2")
Blueprint.connect(node8, "out", node6, "geo")
Blueprint.connect(node7, "tex", node6, "texture")
Blueprint.connect(node6, "geo", node9, "val")
Blueprint.connect(node9, "pin", node5, "geo")
Blueprint.connect(node0, "var", node5, "pos")
Blueprint.connect(node5, "geo", node1, "var")
