var node0 = ::blueprint::nodes::input::Input()

node0.var_name = "facade"
node0.var_type = "geometry"

_editor.add_node(node0, 136.53187675957, 604.6029581179)

var node1 = ::blueprint::nodes::output::Output()

node1.var_name = "geo"
node1.var_type = "geometry"

_editor.add_node(node1, 421.92306403437, 612.44681775615)

var node2 = ::archgraph::nodes::split::Split()
node2.query_param("axis").value = "vert"
node2.query_param("repeat").value = false

_editor.add_node(node2, -939.25796654153, 164.49876171403)

var node3 = ::archgraph::nodes::split_size::SplitSize()
node3.query_param("size").value = 1
node3.query_param("mode").value = "floating"

_editor.add_node(node3, -1079.0217826762, 144.25303956405)

var node4 = ::archgraph::nodes::split_size::SplitSize()
node4.query_param("size").value = 0.2
node4.query_param("mode").value = "floating"

_editor.add_node(node4, -1079.489875054, 59.102354377358)

var node5 = ::blueprint::nodes::subgraph::Subgraph()
node5.load_from_file(_editor, "door_element.ves")

_editor.add_node(node5, -723.49914454235, 155.40055942461)

var node6 = ::blueprint::nodes::merge::Merge()

_editor.add_node(node6, -515.69565741544, 96.681686385514)

var node7 = ::blueprint::nodes::subgraph::Subgraph()
node7.load_from_file(_editor, "door_top.ves")

_editor.add_node(node7, -720.86489624023, 53.14292280717)

var node8 = ::archgraph::nodes::split_size::SplitSize()
node8.query_param("size").value = 0
node8.query_param("mode").value = "absolute"

_editor.add_node(node8, -1081.428847401, 230.58991884506)

var node9 = ::blueprint::nodes::subgraph::Subgraph()
node9.load_from_file(_editor, "stairs.ves")

_editor.add_node(node9, -723.02280101566, 245.27981692319)

var node10 = ::archgraph::nodes::split::Split()
node10.query_param("axis").value = "vert"
node10.query_param("repeat").value = false

_editor.add_node(node10, -920.43366124101, -127.6763708329)

var node11 = ::blueprint::nodes::subgraph::Subgraph()
node11.load_from_file(_editor, "door_element.ves")

_editor.add_node(node11, -715.57425198618, -145.06421592936)

var node12 = ::blueprint::nodes::merge::Merge()

_editor.add_node(node12, -514.20153128927, -94.46005965845)

var node13 = ::blueprint::nodes::subgraph::Subgraph()
node13.load_from_file(_editor, "stairs.ves")

_editor.add_node(node13, -715.09790845949, -55.18495843077)

var node14 = ::archgraph::nodes::split_size::SplitSize()
node14.query_param("size").value = 0
node14.query_param("mode").value = "floating"

_editor.add_node(node14, -1058.6099335719, -177.54144017162)

var node15 = ::blueprint::nodes::for_each_f::ForEachF()

_editor.add_node(node15, 285.26446280992, 592.60743801653)

var node16 = ::blueprint::nodes::subgraph::Subgraph()
node16.load_from_file(_editor, "is_on_ground.ves")

_editor.add_node(node16, -303.31957452947, 537.45917302912)

var node17 = ::blueprint::nodes::branch_f::BranchF()

_editor.add_node(node17, -75.363840737195, 427.39699661008)

var node18 = ::blueprint::nodes::subgraph::Subgraph()
node18.load_from_file(_editor, "door_element.ves")

_editor.add_node(node18, -295.63077762752, 336.49351093065)

var node19 = ::blueprint::nodes::branch_f::BranchF()

_editor.add_node(node19, -264.5658352726, 429.3866417901)

var node20 = ::blueprint::nodes::subgraph::Subgraph()
node20.load_from_file(_editor, "../../../assets/archgraph/probability.ves")
node20.set_prop_value("p", 0.3)

_editor.add_node(node20, -457.29313019447, 450.29571050458)

var node21 = ::archgraph::nodes::rand_number::RandNumber()
node21.query_param("min").value = 0.15
node21.query_param("max").value = 0.5

_editor.add_node(node21, -1580.7976956554, 80.36752516605)

var node22 = ::archgraph::nodes::rand_number::RandNumber()
node22.query_param("min").value = 0.15
node22.query_param("max").value = 0.7

_editor.add_node(node22, -1572.2793675076, -42.980619265223)

var node23 = ::archgraph::nodes::split_size::SplitSize()
node23.query_param("size").value = 0
node23.query_param("mode").value = "absolute"

_editor.add_node(node23, -1061.6989963409, -88.836747560825)

var node24 = ::blueprint::nodes::store::Store()

node24.var_name = "rand5"

_editor.add_node(node24, -1445.1700894353, 104.91257722914)

var node25 = ::blueprint::nodes::store::Store()

node25.var_name = "rand7"

_editor.add_node(node25, -1432.8220221267, -19.040349364764)

var node26 = ::blueprint::nodes::load::Load()

node26.var_name = "rand5"

_editor.add_node(node26, -1207.0230762874, 249.85178358392)

var node27 = ::blueprint::nodes::load::Load()

node27.var_name = "rand7"

_editor.add_node(node27, -1189.2323052525, -68.017700828134)

Blueprint.connect(node22, "val", node25, "var")
Blueprint.connect(node25, "var", node27, "var")
Blueprint.connect(node27, "var", node23, "size")
Blueprint.connect(node21, "val", node24, "var")
Blueprint.connect(node24, "var", node26, "var")
Blueprint.connect(node26, "var", node8, "size")
Blueprint.connect(node15, "curr_item", node18, "facade")
Blueprint.connect(node15, "curr_item", node16, "pos")
Blueprint.connect(node15, "curr_item", node10, "parent")
Blueprint.connect(node23, "size", node10, "size0")
Blueprint.connect(node14, "size", node10, "size1")
Blueprint.connect(node10, "child0", node13, "facade")
Blueprint.connect(node10, "child1", node11, "facade")
Blueprint.connect(node13, "geo", node12, "in0")
Blueprint.connect(node11, "geo", node12, "in1")
Blueprint.connect(node16, "b", node17, "cond")
Blueprint.connect(node12, "list", node17, "true")
Blueprint.connect(node18, "geo", node17, "false")
Blueprint.connect(node15, "curr_item", node2, "parent")
Blueprint.connect(node8, "size", node2, "size0")
Blueprint.connect(node3, "size", node2, "size1")
Blueprint.connect(node4, "size", node2, "size2")
Blueprint.connect(node2, "child0", node9, "facade")
Blueprint.connect(node2, "child2", node7, "facade")
Blueprint.connect(node2, "child1", node5, "facade")
Blueprint.connect(node9, "geo", node6, "in0")
Blueprint.connect(node5, "geo", node6, "in1")
Blueprint.connect(node7, "geo", node6, "in2")
Blueprint.connect(node20, "b", node19, "cond")
Blueprint.connect(node6, "list", node19, "true")
Blueprint.connect(node12, "list", node19, "false")
Blueprint.connect(node0, "var", node15, "items")
Blueprint.connect(node17, "result", node15, "eval")
Blueprint.connect(node15, "result", node1, "var")
