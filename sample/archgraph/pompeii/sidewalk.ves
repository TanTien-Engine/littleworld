var node0 = ::blueprint::nodes::input::Input()

node0.var_name = "facade"
node0.var_type = "geometry"

_editor.add_node(node0, -349.18949984797, 122.09670144325)

var node1 = ::blueprint::nodes::output::Output()

node1.var_name = "geo"
node1.var_type = [ "geometry", "array" ]

_editor.add_node(node1, 540.00472710744, -90.40506121713)

var node2 = ::archgraph::nodes::split::Split()
node2.query_param("axis").value = "hori"
node2.query_param("repeat").value = true

_editor.add_node(node2, -209, 72)

var node3 = ::blueprint::nodes::subgraph::Subgraph()
node3.load_from_file(_editor, "streets_props.ves")

_editor.add_node(node3, -943.44067276826, 285.89498258316)

var node4 = ::archgraph::nodes::split_size::SplitSize()
node4.query_param("size").value = 0
node4.query_param("mode").value = "floating"

_editor.add_node(node4, -487.84, 43.5)

var node5 = ::blueprint::nodes::subgraph::Subgraph()
node5.load_from_file(_editor, "stone.ves")

_editor.add_node(node5, 354.45016528926, -89.67907212622)

var node6 = ::archgraph::nodes::scale_scope::ScaleScope()
node6.query_param("s").value.set(1, 1.0139995200164, 0.3)
node6.query_param("anchor").value = "left"

_editor.add_node(node6, 155.2457736103, -163.65491132942)

var node7 = ::archgraph::nodes::rand_number::RandNumber()
node7.query_param("min").value = 0.8
node7.query_param("max").value = 1.2

_editor.add_node(node7, -756.30367972882, 5.2581541914878)

var node8 = ::blueprint::nodes::multiply::Multiply()

_editor.add_node(node8, -621.85003405095, 52.356435635587)

var node9 = ::blueprint::nodes::lazy_eval::LazyEval()

_editor.add_node(node9, -349.381963617, 60.910597539224)

var node10 = ::archgraph::nodes::translate_scope::TranslateScope()
node10.query_param("t").value.set(0, 0.014734299148918, 0)

_editor.add_node(node10, -52.0986328125, -39.458923339844)

var node11 = ::archgraph::nodes::rand_number::RandNumber()
node11.query_param("min").value = -0.1
node11.query_param("max").value = 0.1

_editor.add_node(node11, -318.07048228717, -61.402448792713)

var node12 = ::blueprint::nodes::lazy_eval::LazyEval()

_editor.add_node(node12, -186.50957150812, -37.342730476018)

var node13 = ::archgraph::nodes::rand_number::RandNumber()
node13.query_param("min").value = 0.9
node13.query_param("max").value = 1.1

_editor.add_node(node13, -152.52093683262, -175.75390333817)

var node14 = ::blueprint::nodes::lazy_eval::LazyEval()

_editor.add_node(node14, -20.96002605357, -151.69418502147)

var node15 = ::blueprint::nodes::store::Store()

node15.var_name = "length"

_editor.add_node(node15, -753.07931173588, 252.85293015065)

var node16 = ::blueprint::nodes::store::Store()

node16.var_name = "height"

_editor.add_node(node16, -756.96555866715, 319.10880230714)

var node17 = ::blueprint::nodes::load::Load()

node17.var_name = "length"

_editor.add_node(node17, -756.22146203116, 75.521725870532)

var node18 = ::blueprint::nodes::load::Load()

node18.var_name = "height"

_editor.add_node(node18, -284.63862304687, -238.41138916016)

var node19 = ::archgraph::nodes::rand_number::RandNumber()
node19.query_param("min").value = 1.1
node19.query_param("max").value = 1.3

_editor.add_node(node19, -284.44307972882, -307.34994580851)

var node20 = ::blueprint::nodes::multiply::Multiply()

_editor.add_node(node20, -149.98943405095, -260.25166436441)

var node21 = ::blueprint::nodes::lazy_eval::LazyEval()

_editor.add_node(node21, -11.12882605357, -250.07828502147)

Blueprint.connect(node13, "val", node14, "val")
Blueprint.connect(node11, "val", node12, "val")
Blueprint.connect(node3, "sidewalk_height", node16, "var")
Blueprint.connect(node16, "var", node18, "var")
Blueprint.connect(node18, "var", node20, "a")
Blueprint.connect(node19, "val", node20, "b")
Blueprint.connect(node20, "v", node21, "val")
Blueprint.connect(node3, "stone_length", node15, "var")
Blueprint.connect(node15, "var", node17, "var")
Blueprint.connect(node17, "var", node8, "a")
Blueprint.connect(node7, "val", node8, "b")
Blueprint.connect(node8, "v", node4, "size")
Blueprint.connect(node4, "size", node9, "val")
Blueprint.connect(node0, "var", node2, "parent")
Blueprint.connect(node9, "pin", node2, "size0")
Blueprint.connect(node2, "child0", node10, "geo")
Blueprint.connect(node12, "pin", node10, "y")
Blueprint.connect(node10, "geo", node6, "geo")
Blueprint.connect(node14, "pin", node6, "y")
Blueprint.connect(node21, "pin", node6, "z")
Blueprint.connect(node6, "geo", node5, "facade")
Blueprint.connect(node5, "geo", node1, "var")
