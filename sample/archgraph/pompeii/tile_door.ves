var node0 = ::blueprint::nodes::input::Input()

node0.var_name = "facade"
node0.var_type = "geometry"

_editor.add_node(node0, -652.1480676608, 169.3927437756)

var node1 = ::blueprint::nodes::output::Output()

node1.var_name = "geo"
node1.var_type = [ "geometry", "array" ]

_editor.add_node(node1, 988.88918500192, -94.520316697467)

var node2 = ::blueprint::nodes::subgraph::Subgraph()
node2.load_from_file(_editor, "subtile_door.ves")

_editor.add_node(node2, 361.83198877408, -134.9813336361)

var node3 = ::archgraph::nodes::split::Split()
node3.query_param("axis").value = "hori"
node3.query_param("repeat").value = false

_editor.add_node(node3, -414.88982992965, -90.792807868315)

var node4 = ::blueprint::nodes::subgraph::Subgraph()
node4.load_from_file(_editor, "rand05.ves")

_editor.add_node(node4, -765, 24.5)

var node5 = ::archgraph::nodes::split_size::SplitSize()
node5.query_param("size").value = 0
node5.query_param("mode").value = "floating"

_editor.add_node(node5, -578, 2.5)

var node6 = ::archgraph::nodes::split_size::SplitSize()
node6.query_param("size").value = 0
node6.query_param("mode").value = "absolute"

_editor.add_node(node6, -576.97896318557, -91.688580015026)

var node7 = ::blueprint::nodes::subgraph::Subgraph()
node7.load_from_file(_editor, "door_width.ves")

_editor.add_node(node7, -770.52139559659, -74.360248534147)

var node8 = ::archgraph::nodes::split_size::SplitSize()
node8.query_param("size").value = 1
node8.query_param("mode").value = "floating"

_editor.add_node(node8, -580.15169728844, -182.75367119732)

var node9 = ::blueprint::nodes::subgraph::Subgraph()
node9.load_from_file(_editor, "painted_wall.ves")

_editor.add_node(node9, -212.99607751487, 36.668712411599)

var node10 = ::blueprint::nodes::subgraph::Subgraph()
node10.load_from_file(_editor, "painted_wall.ves")

_editor.add_node(node10, -216.82645850501, -54.647890851685)

var node11 = ::blueprint::nodes::merge::Merge()

_editor.add_node(node11, 842.11955415659, -124.2752766987)

var node12 = ::archgraph::nodes::split::Split()
node12.query_param("axis").value = "vert"
node12.query_param("repeat").value = false

_editor.add_node(node12, 166.59613479417, -213.82223412393)

var node13 = ::blueprint::nodes::subgraph::Subgraph()
node13.load_from_file(_editor, "building_props.ves")

_editor.add_node(node13, -209.57215139826, -168.1122333141)

var node14 = ::archgraph::nodes::split_size::SplitSize()
node14.query_param("size").value = 0
node14.query_param("mode").value = "absolute"

_editor.add_node(node14, -24.065020023778, -197.88683815159)

var node15 = ::blueprint::nodes::number::Number()

node15.value = 1

_editor.add_node(node15, -238.32402766757, -252.26849505339)

var node16 = ::blueprint::nodes::subtract::Subtract()

_editor.add_node(node16, -96.120616355534, -282.59431794495)

var node17 = ::blueprint::nodes::subgraph::Subgraph()
node17.load_from_file(_editor, "rand05.ves")

_editor.add_node(node17, -286.92561598251, -329.80681278601)

var node18 = ::archgraph::nodes::split_size::SplitSize()
node18.query_param("size").value = 0
node18.query_param("mode").value = "floating"

_editor.add_node(node18, 32.235433517647, -289.64588136292)

var node19 = ::blueprint::nodes::subgraph::Subgraph()
node19.load_from_file(_editor, "painted_wall.ves")

_editor.add_node(node19, 361.22417705966, -221.96885340909)

var node20 = ::blueprint::nodes::merge::Merge()

_editor.add_node(node20, 548.49684884588, -169.24158623047)

Blueprint.connect(node15, "v", node16, "a")
Blueprint.connect(node17, "val", node16, "b")
Blueprint.connect(node16, "v", node18, "size")
Blueprint.connect(node13, "door_height", node14, "size")
Blueprint.connect(node7, "door_w", node6, "size")
Blueprint.connect(node4, "val", node5, "size")
Blueprint.connect(node0, "var", node3, "parent")
Blueprint.connect(node5, "size", node3, "size0")
Blueprint.connect(node6, "size", node3, "size1")
Blueprint.connect(node8, "size", node3, "size2")
Blueprint.connect(node3, "child1", node12, "parent")
Blueprint.connect(node14, "size", node12, "size0")
Blueprint.connect(node18, "size", node12, "size1")
Blueprint.connect(node12, "child1", node19, "geo")
Blueprint.connect(node12, "child0", node2, "facade")
Blueprint.connect(node2, "geo", node20, "in0")
Blueprint.connect(node19, "geo", node20, "in1")
Blueprint.connect(node3, "child2", node10, "geo")
Blueprint.connect(node3, "child0", node9, "geo")
Blueprint.connect(node9, "geo", node11, "in0")
Blueprint.connect(node20, "list", node11, "in1")
Blueprint.connect(node10, "geo", node11, "in2")
Blueprint.connect(node11, "list", node1, "var")
