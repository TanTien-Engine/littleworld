var node0 = ::blueprint::nodes::input::Input()

node0.var_name = "facade"
node0.var_type = "geometry"

_editor.add_node(node0, -1078.5142289368, 919.59091148965)

var node1 = ::blueprint::nodes::output::Output()

node1.var_name = "geo"
node1.var_type = [ "geometry", "array" ]

_editor.add_node(node1, 465.72864284298, 57.391596892567)

var node2 = ::archgraph::nodes::split::Split()
node2.query_param("axis").value = "hori"
node2.query_param("repeat").value = false

_editor.add_node(node2, -520.61715149403, 74.24548962608)

var node3 = ::archgraph::nodes::split_size::SplitSize()
node3.query_param("size").value = 1
node3.query_param("mode").value = "floating"

_editor.add_node(node3, -674.21672637109, 162.34159965977)

var node4 = ::archgraph::nodes::split_size::SplitSize()
node4.query_param("size").value = 1
node4.query_param("mode").value = "floating"

_editor.add_node(node4, -670.4902447783, 75.65610529463)

var node5 = ::archgraph::nodes::split_size::SplitSize()
node5.query_param("size").value = 1
node5.query_param("mode").value = "floating"

_editor.add_node(node5, -669.79916964682, -12.74825533647)

var node6 = ::blueprint::nodes::subgraph::Subgraph()
node6.load_from_file(_editor, "tile_small_window.ves")

_editor.add_node(node6, -326.429971, 209.1024334)

var node7 = ::blueprint::nodes::subgraph::Subgraph()
node7.load_from_file(_editor, "tile_small_window.ves")

_editor.add_node(node7, -328.88451645455, 83.829706127273)

var node8 = ::blueprint::nodes::merge::Merge()

_editor.add_node(node8, -110.429971, 101.6024334)

var node9 = ::archgraph::nodes::switch::Switch()

_editor.add_node(node9, 328.54316593651, 26.321645138569)

var node10 = ::archgraph::nodes::case::Case()

_editor.add_node(node10, 121.8233081, 182.1157573)

var node11 = ::archgraph::nodes::case::Case()

_editor.add_node(node11, 115.6136044, -145.1874129)

var node12 = ::blueprint::nodes::subgraph::Subgraph()
node12.load_from_file(_editor, "../../../assets/archgraph/probability.ves")
node12.set_prop_value("p", 0.4)

_editor.add_node(node12, -67.4566919, 210.8007573)

var node13 = ::blueprint::nodes::subgraph::Subgraph()
node13.load_from_file(_editor, "../../../assets/archgraph/probability.ves")
node13.set_prop_value("p", 0.3)

_editor.add_node(node13, -76.45742039339, -133.8007682719)

var node14 = ::blueprint::nodes::store::Store()

node14.var_name = "facade"

_editor.add_node(node14, -943.48112242539, 918.39144989219)

var node15 = ::blueprint::nodes::load::Load()

node15.var_name = "facade"

_editor.add_node(node15, -672.32831694727, 233.0654613541)

var node16 = ::blueprint::nodes::subgraph::Subgraph()
node16.load_from_file(_editor, "painted_wall.ves")

_editor.add_node(node16, -325.48879224467, -28.136297290696)

var node17 = ::archgraph::nodes::split::Split()
node17.query_param("axis").value = "hori"
node17.query_param("repeat").value = false

_editor.add_node(node17, -528.1214807888, -271.43182750962)

var node18 = ::archgraph::nodes::split_size::SplitSize()
node18.query_param("size").value = 1
node18.query_param("mode").value = "floating"

_editor.add_node(node18, -681.72105566586, -183.33571747593)

var node19 = ::archgraph::nodes::split_size::SplitSize()
node19.query_param("size").value = 1
node19.query_param("mode").value = "floating"

_editor.add_node(node19, -677.99457407307, -270.02121184107)

var node20 = ::archgraph::nodes::split_size::SplitSize()
node20.query_param("size").value = 1
node20.query_param("mode").value = "floating"

_editor.add_node(node20, -677.30349894159, -358.42557247217)

var node21 = ::blueprint::nodes::subgraph::Subgraph()
node21.load_from_file(_editor, "tile_small_window.ves")

_editor.add_node(node21, -330.01995018207, -379.35474849903)

var node22 = ::blueprint::nodes::subgraph::Subgraph()
node22.load_from_file(_editor, "tile_small_window.ves")

_editor.add_node(node22, -330.93430029477, -254.34197614742)

var node23 = ::blueprint::nodes::merge::Merge()

_editor.add_node(node23, -117.93430029477, -244.0748837357)

var node24 = ::blueprint::nodes::load::Load()

node24.var_name = "facade"

_editor.add_node(node24, -679.83264624204, -112.6118557816)

var node25 = ::blueprint::nodes::subgraph::Subgraph()
node25.load_from_file(_editor, "painted_wall.ves")

_editor.add_node(node25, -329.35675790308, -148.35906897185)

var node26 = ::archgraph::nodes::split::Split()
node26.query_param("axis").value = "hori"
node26.query_param("repeat").value = false

_editor.add_node(node26, -382.31195970405, 525.77656655419)

var node27 = ::archgraph::nodes::split_size::SplitSize()
node27.query_param("size").value = 1
node27.query_param("mode").value = "floating"

_editor.add_node(node27, -533.71153458111, 552.27267658788)

var node28 = ::archgraph::nodes::split_size::SplitSize()
node28.query_param("size").value = 2
node28.query_param("mode").value = "floating"

_editor.add_node(node28, -529.98505298832, 465.58718222274)

var node29 = ::blueprint::nodes::merge::Merge()

_editor.add_node(node29, 147.33736955031, 535.12962603059)

var node30 = ::blueprint::nodes::load::Load()

node30.var_name = "facade"

_editor.add_node(node30, -531.82312515729, 622.99653828221)

var node31 = ::blueprint::nodes::subgraph::Subgraph()
node31.load_from_file(_editor, "painted_wall.ves")

_editor.add_node(node31, -176.71087318197, 583.2823829432)

var node32 = ::archgraph::nodes::split::Split()
node32.query_param("axis").value = "hori"
node32.query_param("repeat").value = true

_editor.add_node(node32, -236.65275233858, 450.42181563953)

var node33 = ::archgraph::nodes::split_size::SplitSize()
node33.query_param("size").value = 0
node33.query_param("mode").value = "floating"

_editor.add_node(node33, -384.67565322354, 407.78564999919)

var node34 = ::blueprint::nodes::subgraph::Subgraph()
node34.load_from_file(_editor, "win_props.ves")

_editor.add_node(node34, -734.14004165128, 470.81938942649)

var node35 = ::blueprint::nodes::add::Add()

_editor.add_node(node35, -545.37425518596, 378.82909329514)

var node36 = ::blueprint::nodes::number::Number()

node36.value = 1

_editor.add_node(node36, -683.34296280611, 341.26336844944)

var node37 = ::blueprint::nodes::subgraph::Subgraph()
node37.load_from_file(_editor, "tile_small_window.ves")

_editor.add_node(node37, -53.970079535445, 477.94995412699)

Blueprint.connect(node34, "small_tile_width", node35, "a")
Blueprint.connect(node36, "v", node35, "b")
Blueprint.connect(node35, "v", node33, "size")
Blueprint.connect(node0, "var", node14, "var")
Blueprint.connect(node14, "var", node30, "var")
Blueprint.connect(node30, "var", node26, "parent")
Blueprint.connect(node27, "size", node26, "size0")
Blueprint.connect(node28, "size", node26, "size1")
Blueprint.connect(node26, "child1", node32, "parent")
Blueprint.connect(node33, "size", node32, "size0")
Blueprint.connect(node32, "child0", node37, "facade")
Blueprint.connect(node26, "child0", node31, "geo")
Blueprint.connect(node31, "geo", node29, "in0")
Blueprint.connect(node37, "geo", node29, "in1")
Blueprint.connect(node14, "var", node24, "var")
Blueprint.connect(node24, "var", node17, "parent")
Blueprint.connect(node18, "size", node17, "size0")
Blueprint.connect(node19, "size", node17, "size1")
Blueprint.connect(node20, "size", node17, "size2")
Blueprint.connect(node17, "child0", node25, "geo")
Blueprint.connect(node17, "child1", node22, "facade")
Blueprint.connect(node17, "child2", node21, "facade")
Blueprint.connect(node25, "geo", node23, "in0")
Blueprint.connect(node22, "geo", node23, "in1")
Blueprint.connect(node21, "geo", node23, "in2")
Blueprint.connect(node13, "b", node11, "cond")
Blueprint.connect(node23, "list", node11, "val")
Blueprint.connect(node14, "var", node15, "var")
Blueprint.connect(node15, "var", node2, "parent")
Blueprint.connect(node3, "size", node2, "size0")
Blueprint.connect(node4, "size", node2, "size1")
Blueprint.connect(node5, "size", node2, "size2")
Blueprint.connect(node2, "child2", node16, "geo")
Blueprint.connect(node2, "child1", node7, "facade")
Blueprint.connect(node2, "child0", node6, "facade")
Blueprint.connect(node6, "geo", node8, "in0")
Blueprint.connect(node7, "geo", node8, "in1")
Blueprint.connect(node16, "geo", node8, "in2")
Blueprint.connect(node12, "b", node10, "cond")
Blueprint.connect(node8, "list", node10, "val")
Blueprint.connect(node29, "list", node9, "default")
Blueprint.connect(node10, "val", node9, "case0")
Blueprint.connect(node11, "val", node9, "case1")
Blueprint.connect(node9, "out", node1, "var")
