var node0 = ::blueprint::nodes::input::Input()

node0.var_name = "facade"
node0.var_type = "geometry"

_editor.add_node(node0, -654.77262193274, 266.19954097797)

var node1 = ::blueprint::nodes::output::Output()

node1.var_name = "geo"
node1.var_type = [ "geometry", "array" ]

_editor.add_node(node1, 497.289927411, 119.32151863738)

var node2 = ::blueprint::nodes::subgraph::Subgraph()
node2.load_from_file(_editor, "gazebo_props.ves")

_editor.add_node(node2, -1245.1730614113, 126.53871839924)

var node3 = ::archgraph::nodes::split_size::SplitSize()
node3.query_param("size").value = 0
node3.query_param("mode").value = "absolute"

_editor.add_node(node3, -654.68024247739, 180.01804190281)

var node4 = ::archgraph::nodes::split::Split()
node4.query_param("axis").value = "vert"
node4.query_param("repeat").value = false

_editor.add_node(node4, -504.81805243786, 164.47116843809)

var node5 = ::archgraph::nodes::split_size::SplitSize()
node5.query_param("size").value = 0
node5.query_param("mode").value = "floating"

_editor.add_node(node5, -657.59629934538, 89.65809995362)

var node6 = ::blueprint::nodes::merge::Merge()

_editor.add_node(node6, -64.142144715731, 190.09792667664)

var node7 = ::blueprint::nodes::subgraph::Subgraph()
node7.load_from_file(_editor, "gazebo_walls.ves")

_editor.add_node(node7, -306.62116868612, 188.60389551639)

var node8 = ::blueprint::nodes::subgraph::Subgraph()
node8.load_from_file(_editor, "gazebo_support.ves")

_editor.add_node(node8, -32.16176539418, -29.194072145774)

var node9 = ::archgraph::nodes::scale_scope::ScaleScope()
node9.query_param("s").value.set(1, 1, 1)
node9.query_param("anchor").value = "left"

_editor.add_node(node9, -475.34986091087, -118.5154370206)

var node10 = ::blueprint::nodes::multiply::Multiply()

_editor.add_node(node10, -801.95603269467, -71.989485294563)

var node11 = ::blueprint::nodes::number::Number()

node11.value = 0.7

_editor.add_node(node11, -935.37838558481, -101.3002297898)

var node12 = ::blueprint::nodes::merge::Merge()

_editor.add_node(node12, 351.92539561879, 92.369284889915)

var node13 = ::blueprint::nodes::subgraph::Subgraph()
node13.load_from_file(_editor, "../../../assets/archgraph/align_top.ves")

_editor.add_node(node13, -280.39846708984, -28.704326123047)

var node14 = ::archgraph::nodes::srt_value::SrtValue()
node14.query_param("value").value = 0
node14.query_param("absolute").value = true
node14.query_param("offset").value = false

_editor.add_node(node14, -665.49607320991, -93.897798305543)

var node15 = ::archgraph::nodes::srt_value::SrtValue()
node15.query_param("value").value = 0
node15.query_param("absolute").value = true
node15.query_param("offset").value = false

_editor.add_node(node15, -660.14611320991, -209.52539830554)

var node16 = ::blueprint::nodes::subgraph::Subgraph()
node16.load_from_file(_editor, "gazebo_shelves.ves")

_editor.add_node(node16, -305.76679077149, 96.144845397949)

var node17 = ::blueprint::nodes::subgraph::Subgraph()
node17.load_from_file(_editor, "gazebo_shelves.ves")

_editor.add_node(node17, -307.57399077149, 279.49855539795)

Blueprint.connect(node2, "protrusion", node15, "val")
Blueprint.connect(node2, "protrusion", node10, "a")
Blueprint.connect(node11, "v", node10, "b")
Blueprint.connect(node10, "v", node14, "val")
Blueprint.connect(node2, "beam_width", node3, "size")
Blueprint.connect(node0, "var", node9, "geo")
Blueprint.connect(node14, "val", node9, "y")
Blueprint.connect(node15, "val", node9, "z")
Blueprint.connect(node9, "geo", node13, "pos")
Blueprint.connect(node13, "pos", node8, "facade")
Blueprint.connect(node0, "var", node4, "parent")
Blueprint.connect(node3, "size", node4, "size0")
Blueprint.connect(node5, "size", node4, "size1")
Blueprint.connect(node3, "size", node4, "size2")
Blueprint.connect(node4, "child0", node17, "facade")
Blueprint.connect(node4, "child2", node16, "facade")
Blueprint.connect(node4, "child1", node7, "facade")
Blueprint.connect(node17, "geo", node6, "in0")
Blueprint.connect(node7, "geo", node6, "in1")
Blueprint.connect(node16, "geo", node6, "in2")
Blueprint.connect(node6, "list", node12, "in0")
Blueprint.connect(node8, "geo", node12, "in1")
Blueprint.connect(node12, "list", node1, "var")
