var node0 = ::blueprint::nodes::input::Input()

node0.var_name = "facade"
node0.var_type = "geometry"

_editor.add_node(node0, -1816.5406610629, -297.15173952472)

var node1 = ::blueprint::nodes::output::Output()

node1.var_name = "geo"
node1.var_type = [ "geometry", "array" ]

_editor.add_node(node1, 96.175258512399, -4.4494262809929)

var node2 = ::archgraph::nodes::split::Split()
node2.query_param("axis").value = "vert"
node2.query_param("repeat").value = true

_editor.add_node(node2, -1509.9645372592, -230.80176308618)

var node3 = ::archgraph::nodes::split_size::SplitSize()
node3.query_param("size").value = 0.15
node3.query_param("mode").value = "floating"

_editor.add_node(node3, -1817.5609712488, -397.20962657782)

var node4 = ::archgraph::nodes::insert::Insert()

_editor.add_node(node4, -42.741092094691, -10.723712770373)

var node5 = ::archgraph::nodes::primitive_cube::PrimitiveCube()
node5.query_param("size").value.set(1, 1, 1)

_editor.add_node(node5, -446.11299317334, 24.177113675907)

var node6 = ::blueprint::nodes::subgraph::Subgraph()
node6.load_from_file(_editor, "stone_block_tex.ves")

_editor.add_node(node6, -490.38572473366, -71.97164438477)

var node7 = ::blueprint::nodes::subgraph::Subgraph()
node7.load_from_file(_editor, "../../../assets/archgraph/texture.ves")

_editor.add_node(node7, -252.29481564276, -7.6989171120429)

var node8 = ::archgraph::nodes::scale_scope::ScaleScope()
node8.query_param("s").value.set(1, 1, 0.2)
node8.query_param("anchor").value = "left"

_editor.add_node(node8, -477.49492488517, -342.70634122782)

var node9 = ::blueprint::nodes::for_each_f::ForEachF()

_editor.add_node(node9, -309.61103490498, -221.34679164871)

var node10 = ::blueprint::nodes::count::Count()

_editor.add_node(node10, -1348.2148463517, -235.79818318621)

var node11 = ::blueprint::nodes::fetch::Fetch()

_editor.add_node(node11, -750.83699831562, -112.38313304218)

var node12 = ::blueprint::nodes::number::Number()

node12.value = 0.2

_editor.add_node(node12, -845.12256956191, -314.20383584544)

var node13 = ::blueprint::nodes::multiply::Multiply()

_editor.add_node(node13, -708.2815726723, -348.54092573674)

var node14 = ::blueprint::nodes::subtract::Subtract()

_editor.add_node(node14, -848.28028380878, -393.47024369549)

var node15 = ::blueprint::nodes::mod::Mod()

_editor.add_node(node15, -1034.7297967878, -443.97408691487)

var node16 = ::blueprint::nodes::divide::Divide()

_editor.add_node(node16, -1185.1537158203, -407.04402832032)

var node17 = ::blueprint::nodes::count::Count()

_editor.add_node(node17, -1336.4037353516, -430.03400634766)

Blueprint.connect(node5, "geo", node7, "geo")
Blueprint.connect(node6, "tex", node7, "texture")
Blueprint.connect(node0, "var", node17, "var")
Blueprint.connect(node0, "var", node2, "parent")
Blueprint.connect(node3, "size", node2, "size0")
Blueprint.connect(node2, "child0", node11, "items")
Blueprint.connect(node9, "curr_item", node11, "index")
Blueprint.connect(node2, "child0", node10, "var")
Blueprint.connect(node10, "num", node16, "a")
Blueprint.connect(node17, "num", node16, "b")
Blueprint.connect(node9, "curr_item", node15, "x")
Blueprint.connect(node16, "v", node15, "y")
Blueprint.connect(node16, "v", node14, "a")
Blueprint.connect(node15, "v", node14, "b")
Blueprint.connect(node12, "v", node13, "a")
Blueprint.connect(node14, "v", node13, "b")
Blueprint.connect(node11, "item", node8, "geo")
Blueprint.connect(node13, "v", node8, "z")
Blueprint.connect(node10, "num", node9, "count")
Blueprint.connect(node8, "geo", node9, "eval")
Blueprint.connect(node7, "geo", node4, "geo")
Blueprint.connect(node9, "result", node4, "pos")
Blueprint.connect(node4, "geo", node1, "var")
