var node0 = ::blueprint::nodes::input::Input()

node0.var_name = "facade"
node0.var_type = "geometry"

_editor.add_node(node0, -802.3276396608, -183.7017882244)

var node1 = ::blueprint::nodes::output::Output()

node1.var_name = "geo"
node1.var_type = [ "geometry", "array" ]

_editor.add_node(node1, 1002.1185415785, -285.35961147032)

var node2 = ::archgraph::nodes::split::Split()
node2.query_param("axis").value = "vert"
node2.query_param("repeat").value = false

_editor.add_node(node2, -269.36308818632, -282.40776144013)

var node3 = ::blueprint::nodes::subgraph::Subgraph()
node3.load_from_file(_editor, "gazebo_props.ves")

_editor.add_node(node3, -708.5254270293, -355.37317529834)

var node4 = ::archgraph::nodes::split_size::SplitSize()
node4.query_param("size").value = 0
node4.query_param("mode").value = "absolute"

_editor.add_node(node4, -459.2824270293, -254.62718292774)

var node5 = ::archgraph::nodes::split_size::SplitSize()
node5.query_param("size").value = 10
node5.query_param("mode").value = "floating"

_editor.add_node(node5, -457.00067871875, -367.96609804492)

var node6 = ::archgraph::nodes::split_size::SplitSize()
node6.query_param("size").value = 0
node6.query_param("mode").value = "absolute"

_editor.add_node(node6, -455.21728277585, -480.93604545288)

var node7 = ::archgraph::nodes::insert::Insert()

_editor.add_node(node7, 626.62311200218, 36.662317370419)

var node8 = ::archgraph::nodes::primitive_cube::PrimitiveCube()
node8.query_param("size").value.set(1, 1, 1)

_editor.add_node(node8, 227.06418189574, 59.333685446979)

var node9 = ::blueprint::nodes::subgraph::Subgraph()
node9.load_from_file(_editor, "wall_material.ves")

_editor.add_node(node9, 436.72509135166, 88.642699243229)

var node10 = ::blueprint::nodes::merge::Merge()

_editor.add_node(node10, 857.53597588838, -318.58880365539)

var node11 = ::blueprint::nodes::subgraph::Subgraph()
node11.load_from_file(_editor, "gallery_opening.ves")

_editor.add_node(node11, 605.06159576687, -305.21645584785)

var node12 = ::archgraph::nodes::scale_scope::ScaleScope()
node12.query_param("s").value.set(1.05, 1, 0.41875)
node12.query_param("anchor").value = "left"

_editor.add_node(node12, 321.14108017001, -805.73734696378)

var node13 = ::blueprint::nodes::subgraph::Subgraph()
node13.load_from_file(_editor, "wood_tex.ves")

_editor.add_node(node13, 290.30568370739, -659.53526982113)

var node14 = ::blueprint::nodes::subgraph::Subgraph()
node14.load_from_file(_editor, "../../../assets/archgraph/texture.ves")

_editor.add_node(node14, 526.28379903054, -613.84560103471)

var node15 = ::archgraph::nodes::insert::Insert()

_editor.add_node(node15, 710.59990214666, -658.35036187677)

var node16 = ::archgraph::nodes::primitive_cube::PrimitiveCube()
node16.query_param("size").value.set(1, 1, 1)

_editor.add_node(node16, -116.30328300071, -590.24216341264)

var node17 = ::blueprint::nodes::commentary::Commentary()

node17.set_size(993.72894545454, 409.61602727273)
node17.title = "Shelves"

_editor.add_node(node17, 314.68685059127, -515.13625576172)

var node18 = ::blueprint::nodes::subgraph::Subgraph()
node18.load_from_file(_editor, "pillar_base_width.ves")

_editor.add_node(node18, -453.72244722899, -123.92636971841)

var node19 = ::archgraph::nodes::scope_size::ScopeSize()

_editor.add_node(node19, -648.75117040661, -124.49035117543)

var node20 = ::blueprint::nodes::number::Number()

node20.value = 1.05

_editor.add_node(node20, 180.04194483952, -760.26961856966)

var node21 = ::blueprint::nodes::subgraph::Subgraph()
node21.load_from_file(_editor, "gallery_props.ves")

_editor.add_node(node21, 45.055273904099, -78.838854963141)

var node22 = ::archgraph::nodes::scale_scope::ScaleScope()
node22.query_param("s").value.set(1, 1, 1.5)
node22.query_param("anchor").value = "left"

_editor.add_node(node22, 245.08238629225, -102.59112963648)

var node23 = ::blueprint::nodes::commentary::Commentary()

node23.set_size(806.56, 346.76)
node23.title = "Floor"

_editor.add_node(node23, 287.45917216187, 143.61760233398)

var node24 = ::blueprint::nodes::store::Store()

node24.var_name = "width"

_editor.add_node(node24, -270.52730302734, -133.10223398438)

var node25 = ::blueprint::nodes::load::Load()

node25.var_name = "width"

_editor.add_node(node25, 179.36749305066, -825.16089014738)

var node26 = ::archgraph::nodes::translate_scope::TranslateScope()
node26.query_param("t").value.set(0, 0, -0.209375)

_editor.add_node(node26, 396.94486204102, -345.74644359863)

var node27 = ::blueprint::nodes::load::Load()

node27.var_name = "width"

_editor.add_node(node27, -16.300715795453, -339.22237416282)

var node28 = ::blueprint::nodes::divide::Divide()

_editor.add_node(node28, 125.51746047408, -357.40417292436)

var node29 = ::blueprint::nodes::integer::Integer()

node29.value = 2

_editor.add_node(node29, -14.482568656339, -395.58598833185)

var node30 = ::blueprint::nodes::commentary::Commentary()

node30.set_size(874.3684, 236.0208)
node30.title = "Pillars"

_editor.add_node(node30, 291.23405305664, -246.37258512695)

var node31 = ::archgraph::nodes::setup_projection::SetupProjection()
node31.query_param("axes").value = "yx"
node31.query_param("scale").value.set(1, 0.35445320606232)
node31.query_param("scale2").value.set(1, 1)
node31.query_param("offset").value.set(0, 0)
node31.query_param("uw_factor").value = 1
node31.query_param("gpu").value = true

_editor.add_node(node31, 12.451212646482, -658.71507714844)

var node32 = ::blueprint::nodes::negate::Negate()

_editor.add_node(node32, 264.0294699929, -345.42847928134)

var node33 = ::blueprint::nodes::subgraph::Subgraph()
node33.load_from_file(_editor, "../../../assets/archgraph/align_front.ves")

_editor.add_node(node33, 426.05740966797, -36.931341552734)

var node34 = ::blueprint::nodes::subgraph::Subgraph()
node34.load_from_file(_editor, "../../../assets/archgraph/align_front.ves")

_editor.add_node(node34, 528.32762939454, -775.02437744141)

var node35 = ::blueprint::nodes::print::Print()

_editor.add_node(node35, -416.60308837891, 127.75009155273)

Blueprint.connect(node16, "geo", node31, "geo")
Blueprint.connect(node31, "geo", node14, "geo")
Blueprint.connect(node13, "tex", node14, "texture")
Blueprint.connect(node8, "geo", node9, "geo")
Blueprint.connect(node3, "beam_width", node6, "size")
Blueprint.connect(node3, "beam_width", node4, "size")
Blueprint.connect(node0, "var", node19, "geo")
Blueprint.connect(node19, "sy", node18, "height")
Blueprint.connect(node18, "width", node35, "value")
Blueprint.connect(node18, "width", node24, "var")
Blueprint.connect(node24, "var", node27, "var")
Blueprint.connect(node27, "var", node28, "a")
Blueprint.connect(node29, "v", node28, "b")
Blueprint.connect(node28, "v", node32, "v")
Blueprint.connect(node24, "var", node25, "var")
Blueprint.connect(node0, "var", node2, "parent")
Blueprint.connect(node4, "size", node2, "size0")
Blueprint.connect(node5, "size", node2, "size1")
Blueprint.connect(node6, "size", node2, "size2")
Blueprint.connect(node2, "child1", node26, "geo")
Blueprint.connect(node32, "v", node26, "z")
Blueprint.connect(node26, "geo", node11, "facade")
Blueprint.connect(node2, "child0", node22, "geo")
Blueprint.connect(node21, "depth", node22, "z")
Blueprint.connect(node22, "geo", node33, "pos")
Blueprint.connect(node9, "geo", node7, "geo")
Blueprint.connect(node33, "pos", node7, "pos")
Blueprint.connect(node2, "child2", node12, "geo")
Blueprint.connect(node20, "v", node12, "x")
Blueprint.connect(node25, "var", node12, "z")
Blueprint.connect(node12, "geo", node34, "pos")
Blueprint.connect(node14, "geo", node15, "geo")
Blueprint.connect(node34, "pos", node15, "pos")
Blueprint.connect(node7, "geo", node10, "in0")
Blueprint.connect(node11, "geo", node10, "in1")
Blueprint.connect(node15, "geo", node10, "in2")
Blueprint.connect(node10, "list", node1, "var")
