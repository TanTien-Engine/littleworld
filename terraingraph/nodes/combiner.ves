import "blueprint.node" for Node
import "blueprint.node_function" for NodeFunction

var CODE = "
uniform __UBO__
{
    // average, add, subtract, multiply, divide, max, min
	int method;
};

float combiner(float a, float b)
{
    float v = 0.0;
    if (method == 0) {
    	v = (a + b) * 0.5;
    } else if (method == 1) {
    	v = a + b;
    } else if (method == 2) {
    	v = a - b;
    } else if (method == 3) {
    	v = a * b;
    } else if (method == 4) {
    	v = a / b;
    } else if (method == 5) {
    	v = max(a, b);
    } else if (method == 6) {
    	v = min(a, b);
    }

    return v;
}
"	

class Combiner is Node
{
	init() 
	{
		super.init()

		this.layout()

		this.node_func = NodeFunction(this, "compute", CODE, "glsl", "combiner", [
			[ "method", 1, { "integer" : true, "min" : 0, "max" : 6 } ],
		])
	}
}