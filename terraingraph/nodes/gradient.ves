import "blueprint.node" for Node
import "blueprint.node_function" for NodeFunction

var CODE = "
uniform __UBO__
{
	float angle;
};

vec2 rotate2d(vec2 dir, float angle)
{
	float c = cos(angle);
	float s = sin(angle);
	return vec2(dir.x * c - dir.y * s, dir.x * s + dir.y * c);
}

float gradient(vec2 tex_coords)
{
    tex_coords = vec2(0.5) + rotate2d(tex_coords - vec2(0.5), angle * 3.14 / 180.0);
    const float h = -(tex_coords.x - 0.5) / 0.5;
    return h;
}
"	

class Gradient is Node
{
	init() 
	{
		super.init()
	
		this.layout()

		this.node_func = NodeFunction(this, "compute", CODE, "glsl", "gradient", [
			[ "angle", 0.0, { "min" : 0.0, "max" : 360.0 } ],
		])
	}
}