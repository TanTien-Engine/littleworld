import "blueprint.node" for Node
import "blueprint.node_function" for NodeFunction

var CODE = "
uniform sampler2D in_tex2;

uniform __UBO__
{
	float dx;
	float dy;
};

const float a = 1.0/36.0;
const float b = 4.0/36.0;
const float c = 16.0/36.0;

float get(float s, float t){
    return texture(in_tex2, vec2(s, t)).r;
}

float gaussian(vec2 uv)
{
    float h =
        a * get(uv.x - dx, uv.y - dy) + b * get(uv.x, uv.y - dy) + a * get(uv.x + dx, uv.y - dy) +
        b * get(uv.x - dx, uv.y  )    + c * get(uv.x, uv.y)      + b * get(uv.x + dx, uv.y  ) +
        a * get(uv.x - dx, uv.y + dy) + b * get(uv.x, uv.y + dy) + a * get(uv.x + dx, uv.y + dy);
    return h;
}
"

class Gaussian is Node
{
	init() 
	{
		super.init()

		this.layout()

		this.node_func = NodeFunction(this, "compute", CODE, "glsl", "gaussian", [
			[ "dx", 0.0 ],
			[ "dy", 0.0 ],
		])
	}
}