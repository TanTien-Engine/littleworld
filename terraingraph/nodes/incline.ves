import "blueprint.node" for Node
import "blueprint.node_function" for NodeFunction

var CODE = "
uniform sampler2D in_tex2;

uniform __UBO__
{
	float dx;
	float dy;
};

const float a = 1.0/36.0;
const float b = 4.0/36.0;
const float c = 16.0/36.0;

vec3 get(float s, float t)
{
    float height = texture(in_tex2, vec2(s, t)).r;
    return vec3(s, height, t);
}

vec3 get_normal(vec3 p) 
{
    float x = dx;
    float z = dy;
    return normalize(vec3(
        get(p.x - x, p.z).y - get(p.x + x, p.z).y,
        x + z,
        get(p.x, p.z - z).y - get(p.x, p.z + z).y
    ));
}

float incline(vec2 uv)
{
    vec3 normal = get_normal(get(uv.x, uv.y));
    float h = dot(normal, vec3(0.0, 1.0, 0.0));
    return h;
}
"

class Incline is Node
{
	init() 
	{
		super.init()

		this.layout()

		this.node_func = NodeFunction(this, "compute", CODE, "glsl", "incline", [
			[ "dx", 0.0 ],
			[ "dy", 0.0 ],
		])
	}
}