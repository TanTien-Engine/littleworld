import "blueprint.node" for Node
import "blueprint.node_function" for NodeFunction

var CODE = "
vec2 transform(vec2 uv, float dx, float dy, float rot, float scale)
{
    // scale
    uv = (uv - vec2(0.5, 0.5)) * scale + vec2(0.5, 0.5);
    // rotate
    float sin_factor = sin(rot);
    float cos_factor = cos(rot);
    uv = vec2(uv.x - 0.5, uv.y - 0.5) * mat2(cos_factor, sin_factor, -sin_factor, cos_factor) + vec2(0.5, 0.5);
    // translate
    uv = uv + vec2(dx, dy);

    return uv;
}
"	

class Transform is Node
{
	init() 
	{
		super.init()

		this.layout()

		this.node_func = NodeFunction(this, "compute", CODE, "glsl", "transform", [
			[ "dx", 0.0 ],
			[ "dy", 0.0 ],
			[ "rot", 0.0 ],			
			[ "scale", 1.0 ],
		])
	}
}